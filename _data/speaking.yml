- name: "Cloud Adoption Fails: 5 Ways Deployments Go Wrong and 5 Solutions"
  date: "April 20, 2022"
  description: |
    "All happy cloud deployments are alike; each unhappy cloud deployment is unhappy in its own way." — Leo Tolstoy,
    Site Reliability Engineer<br><br>
    At Gruntwork, I've had the chance to see the cloud adoption journeys of hundreds of companies, from tiny startups to
    Fortune 50 giants. I've seen those journeys go well. I've seen those journeys go poorly. In this talk, I discuss a
    few of the ways cloud adoption can go horribly wrong (massive cost overruns, endless death marches, security disasters),
    and more importantly, how you can get it right. To help you get it right, we looked at the cloud journeys that were
    successful and extracted from them the patterns they had in common. We distilled all this experience down into
    something called the Gruntwork Production Framework, which defines five concrete steps you can follow to adopt the
    cloud at your own company—and hopefully, to end up with your very own happy cloud deployment.
  embed_url: "//www.youtube.com/embed/sYzhlBayRpU"
  links:
    - label: "Video"
      url: "https://www.youtube.com/watch?v=sYzhlBayRpU"
    - label: "Slides"
      url: "https://www.slideshare.net/brikis98/cloud-adoption-fails-5-ways-deployments-go-wrong-and-5-solutionspdf"
- name: "SE Radio Interview: Infrastructure as Code Best Practices"
  date: "April 7, 2020"
  description: |
    I did a podcast interview with Software Engineering Radio on Infrastructure as Code best practices. The discussion
    covers similarities and differences between conventional software engineering and code-driven infrastructure;
    factoring code into modules; layering; terraform code organization for micro-services; releases and tagging; code
    reviews; unit testing infrastructure; deployment of infrastructure; ownership and code structure models; and open
    source and re-usable libraries.
  embed_url: "//castbox.fm/app/castbox/player/id2354/id248469999?v=8.19.1&autoplay=0&hide_list=1"
  wrapper_style: "padding-bottom: 35%"
  links:
    - label: "Podcast"
      url: "https://www.se-radio.net/2020/04/episode-405-yevgeniy-brikman-on-infrastructure-as-code-best-practices/"
- name: "Automated testing for Terraform, Kubernetes, Docker, Packer and more"
  date: "November 11, 2019"
  description: |
    This talk from QCon SF is a step-by-step, live-coding class on how to write automated tests for infrastructure
    code, including the code you write for use with tools such as Terraform, Kubernetes, Docker, and Packer. Topics
    covered include unit tests, integration tests, end-to-end tests, test parallelism, retries, error handling, static
    analysis, and more.
  embed_url: "//www.youtube.com/embed/xhHOW0EF5u8"
  links:
    - label: "Video & Slides"
      url: "https://www.infoq.com/presentations/automated-testing-terraform-docker-packer/"
    - label: "Video"
      url: "https://www.youtube.com/watch?v=xhHOW0EF5u8"
    - label: "Slides"
      url: "https://www.slideshare.net/brikis98/how-to-test-infrastructure-code-automated-testing-for-terraform-kubernetes-docker-packer-and-more"
- name: "Lessons from 300k+ Lines of Infrastructure Code"
  date: "March 5, 2019"
  description: |
    My talk from QCon London where I shared key lessons from the "Infrastructure Cookbook" we developed at Gruntwork
    while creating and maintaining a library of over 300,000 lines of infrastructure code used in production by
    hundreds of companies. Topics include how to design infrastructure APIs, automated tests for infrastructure code,
    patterns for reuse and composition, refactoring, namespacing, and more.
  embed_url: "//www.youtube.com/embed/jiWRTuF4yXk"
  links:
    - label: "Video"
      url: "https://www.youtube.com/watch?v=jiWRTuF4yXk"
    - label: "Video, Slides, Transcript"
      url: "https://www.infoq.com/presentations/infrastructure-cookbook"
- name: "Lessons learned from writing over 300,000 lines of infrastructure code"
  date: "October 24, 2018"
  description: |
    This talk from HashiConf 2018 is a concise masterclass on how to write infrastructure code. I share key lessons
    from the "Infrastructure Cookbook" we developed at Gruntwork while creating and maintaining a library of over
    300,000 lines of infrastructure code that's used in production by hundreds of companies. Come and hear our war
    stories, laugh about all the mistakes we’ve made along the way, and learn what Terraform, Packer, Docker, and Go
    look like in the wild.
  embed_url: "//www.youtube.com/embed/RTEgE2lcyk4"
  links:
    - label: "Video"
      url: "https://www.youtube.com/watch?v=RTEgE2lcyk4"
    - label: "Slides"
      url: "https://www.slideshare.net/brikis98/lessons-learned-from-writing-over-300000-lines-of-infrastructure-code-120597849"
    - label: "Blog Post"
      url: "https://blog.gruntwork.io/5-lessons-learned-from-writing-over-300-000-lines-of-infrastructure-code-36ba7fadeac1"
- name: "Reusable, composable, battle-tested Terraform modules"
  date: "September 19, 2017"
  description: |
    This is my talk from HashiConf 2017 where I introduce the work we've been doing at Gruntwork with Terraform Modules.
    I explain how modules work, how to design modules so they are highly configurable and reusable, and how to write
    automated tests for your Terraform code. Most importanly, I show you how you can use modules to build your entire
    tech stack on top of proven, battle-tested infrastructure code—in minutes.
  embed_url: "//www.youtube.com/embed/LVgP63BkhKQ"
  links:
    - label: "Video"
      url: "https://www.youtube.com/watch?v=LVgP63BkhKQ"
    - label: "Slides"
      url: "https://www.slideshare.net/brikis98/reusable-composable-battletested-terraform-modules"
    - label: "Blog Post"
      url: "https://www.ybrikman.com/writing/2017/10/13/reusable-composable-battle-tested-terraform-modules/"
- name: "Startup DNA: the formula behind successful startups in Silicon Valley."
  date: "May 5, 2017"
  description: |
    "Successful startups are all alike; every unsuccessful startup is unsuccessful in its own way."
    These are my personal observations on a few traits that make startups successful.
  embed_url: "//www.youtube.com/embed/z_D9oXCK2lM"
  links:
    - label: "Video"
      url: "https://www.youtube.com/watch?v=z_D9oXCK2lM"
    - label: "Slides"
      url: "http://www.slideshare.net/brikis98/startup-dna"
    - label: "Interview"
      url: "http://www.blogtalkradio.com/socialmediapearls/2013/06/11/givestartupsachance-making-excelllent-mistakes"
- name: "The Truth About Startups"
  date: "Friday, April 7, 2017"
  description: |
    This is the talk I gave at the MIT Martin Center for Entrepreneurship and the Trinity College Blackstone Launchpad.
    It's a talk I wish someone gave me when I was in college to help me think about the role of entrepreneurship and
    startups in my career.
  embed_url: "//www.youtube.com/embed/Rus32iR_Ag0"
  links:
    - label: "Video"
      url: "https://www.youtube.com/watch?v=Rus32iR_Ag0"
    - label: "Slides"
      url: "https://www.slideshare.net/brikis98/the-truth-about-startups-what-i-wish-someone-had-told-me-about-entrepreneurship-silicon-valley-and-successful-careers"
    - label: "Blog post"
      url: "https://www.ybrikman.com/writing/2017/05/05/the-truth-about-startups/"
- name: "devRant podcast"
  date: "Monday, January 9, 2017"
  description: |
    I did a podcast interview for the devRant podcast where I talk about how I got into programming, the biggest
    lessons I've learned, the biggest lessons I've had to unlearn, DevOps, startups, and more.
  embed_url: "//www.youtube.com/embed/-iYedjqFtec"
  links:
    - label: "devRant"
      url: "https://www.devrant.io/podcasts/episode-2-yevgeniy-brikman"
    - label: "YouTube"
      url: "https://www.youtube.com/embed/-iYedjqFtec"
    - label: "SoundCloud"
      url: "https://soundcloud.com/devrantapp/the-devrant-podcast-episode-2-yevgeniy-brikman"
    - label: "iTunes"
      url: "https://itunes.apple.com/us/podcast/episode-2-yevgeniy-brikman/id1159260198?i=1000379739659&mt=2"
    - label: "Google Play"
      url: "https://play.google.com/music/m/Dwqvlqtuqffncdc6jtk4tnhwd7m?t=Episode_2__Yevgeniy_Brikman-The_devRant_Podcast"
- name: "Yours Productly Podcast"
  date: "Monday, November 21, 2016"
  description: |
    I did an interview for the Yours Productly podcast where I talk about startups, product design, coming up with
    startup ideas, minimal viable products, learning, writing, and more.
  embed_url: "//w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/293716917&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;visual=true"
  links:
    - label: "SoundCloud"
      url: "https://soundcloud.com/yoursproductly/yevgeniy-brikman"
    - label: "Blog post"
      url: "http://yoursproductly.com/yevgeniy-brikman/"
- name: "An intro to Docker, Terraform, and Amazon ECS"
  date: "Wednesday, October 26, 2016"
  description: |
    This talk is a very quick intro to Docker, Terraform, and Amazon's EC2 Container Service (ECS). In just 15 minutes,
    you'll see how to take two apps (a Rails frontend and a Sinatra backend), package them as Docker containers, run
    them using Amazon ECS, and to define all of the infrastructure-as-code using Terraform.
  embed_url: "//www.slideshare.net/slideshow/embed_code/key/tJJsLzQieCnIYn"
  links:
    - label: "Slides"
      url: "http://www.slideshare.net/brikis98/an-intro-to-docker-terraform-and-amazon-ecs"
    - label: "Code"
      url: "https://github.com/brikis98/infrastructure-as-code-talk"
- name: "Comprehensive Terraform Training"
  date: "Wednesday, September 21, 2016"
  description: |
    A comprehensive walkthrough of how to manage infrastructure-as-code using Terraform. This presentation includes an
    introduction to Terraform, a discussion of how to manage Terraform state, how to use Terraform modules, an overview
    of best practices (e.g. isolation, versioning, loops, if-statements), and a list of gotchas to look out for.
  embed_url: "//www.slideshare.net/slideshow/embed_code/key/glQaYvUDo4WlRm"
  links:
    - label: "Slides"
      url: "http://www.slideshare.net/brikis98/comprehensive-terraform-training"
- name: "Infrastructure as code: running microservices on AWS using Docker, Terraform, and ECS"
  date: "Friday, April 1, 2016"
  description: |
    This is a talk about managing your software and infrastructure-as-code that walks through a real-world example of
    deploying microservices on AWS using Docker, Terraform, and ECS.
  embed_url: "https://player.vimeo.com/video/167706949"
  links:
    - label: "Video"
      url: "https://vimeo.com/167706949"
    - label: "Slides"
      url: "http://www.slideshare.net/brikis98/infrastructure-as-code-running-microservices-on-aws-using-docker-terraform-and-ecs"
    - label: "Code"
      url: "https://github.com/brikis98/infrastructure-as-code-talk"
    - label: "Blog post"
      url: "https://www.ybrikman.com/writing/2016/03/31/infrastructure-as-code-microservices-aws-docker-terraform-ecs/"
- name: "Startup Ideas and Validation"
  date: "Friday, February 5, 2016"
  description: |
    Every startup begins with an idea. This is a talk on how to come up with startup ideas and
    how to use validation to pick the good ones.
  embed_url: "//www.youtube.com/embed/GkmiE8d_5Pw"
  links:
    - label: "Video"
      url: "https://www.youtube.com/watch?v=GkmiE8d_5Pw"
    - label: "Slides"
      url: "http://www.slideshare.net/brikis98/startup-ideas-and-validation"
    - label: "Blog post"
      url: "https://www.ybrikman.com/writing/2016/02/14/startup-ideas-and-validation/"
- name: "Agility Requires Safety"
  date: "Friday, February 5, 2016"
  description: |
    To go faster in a car, you need not only a powerful engine, but also safety
    mechanisms like brakes, air bags, and seat belts. This is a talk about
    the safety mechanisms that allow you to build software faster.
  embed_url: "//www.youtube.com/embed/4fKm6ImKml8"
  links:
    - label: "Video"
      url: "https://www.youtube.com/watch?v=4fKm6ImKml8"
    - label: "Slides"
      url: "http://www.slideshare.net/brikis98/agility-requires-safety"
    - label: "Blog post"
      url: "https://www.ybrikman.com/writing/2016/02/14/agility-requires-safety/"
- name: "A Crash Course on Design for Developers"
  date: "Wednesday, October 7, 2015"
  description: |
    This talk will introduce you to the basic tools of user-centered and visual
    design. It's targeted at developers and anyone else who wants to improve
    the design of their websites, mobile apps, resumes, slide decks, and so on.
  embed_url: "//www.youtube.com/embed/NF2Rb3Kd96k"
  links:
    - label: "Video"
      url: "https://www.youtube.com/watch?v=NF2Rb3Kd96k"
    - label: "Slides"
      url: "http://www.slideshare.net/brikis98/a-crash-course-on-product-design-for-developers"
    - label: "Blog post"
      url: "https://www.ybrikman.com/writing/2015/10/07/crash-course-design-for-developers/"
- name: "A Guide to Hiring for your Startup"
  date: "April 30, 2015"
  description: |
    Choosing the right people is far more important than choosing the right
    product, marketing strategy, tech stack, or coding methodology. That means
    hiring is the most important thing you do. It's also one of the hardest. In
    this talk, I describe how to hire for your startup, including finding
    co-founders, early hires, and later hires. I also discuss what to look for
    in a candidate, where to find candidates, how to interview them, and how to
    make an offer they can't refuse.
  embed_url: "//www.youtube.com/embed/jaSmYLymc0U"
  links:
    - label: "Video"
      url: "https://www.youtube.com/watch?v=jaSmYLymc0U"
    - label: "Slides"
      url: "http://www.slideshare.net/brikis98/a-guide-to-hiring-for-your-startup"
    - label: "Webcast"
      url: "http://www.oreilly.com/pub/e/3356"
- name: "Node.js vs Play Framework"
  date: "September 5, 2014"
  description: |
    Here's the showdown you've been waiting for: Node.js vs Play Framework.
    Both are popular open source web frameworks that are built for developer
    productivity, asynchronous I/O, and the real time web. But which one is
    easier to learn, test, deploy, debug, and scale? Should you pick Javascript
    or Scala? The Google v8 engine or the JVM? NPM or Ivy? Grunt or SBT?
  embed_url: "//www.youtube.com/embed/b6yLwvNSDck"
  links:
    - label: "Video"
      url: "http://www.youtube.com/watch?v=b6yLwvNSDck"
    - label: "Video (Japanese Subtitles)"
      url: "http://www.nicovideo.jp/watch/1410857293"
    - label: "Slides"
      url: "http://www.slideshare.net/brikis98/nodejs-vs-play-framework"
    - label: "Blog post"
      url: "https://www.ybrikman.com/writing/2014/09/29/nodejs-vs-play-framework/"
- name: "Composable and Streamable Play Apps"
  date: "July 23, 2014"
  description: |
     Web pages can get complex and slow. This talk shows how to deal with both
     of these issues by using composition and functional programming in the
     Play Framework to build complex pages out of simpler parts and how to
     stream those parts extremely quickly to the browser using a Facebook
     BigPipe-style approach.
  embed_url: "//www.youtube.com/embed/4b1XLka0UIw"
  links:
    - label: "Video"
      url: "https://www.youtube.com/watch?v=4b1XLka0UIw"
    - label: "Slides"
      url: "http://www.slideshare.net/brikis98/composable-and-streamable-play-apps"
    - label: "Code"
      url: "https://github.com/brikis98/ping-play"
- name: "Play Framework: async I/O with Java and Scala"
  date: "July 10, 2013"
  description: |
    An introduction to writing asynchronous, non-blocking code with the Play
    Framework.
  embed_url: "//www.slideshare.net/slideshow/embed_code/24116986"
  links:
    - label: "Slides"
      url: "http://www.slideshare.net/brikis98/play-framework-async-io-with-java-and-scala"
    - label: "Blog Post"
      url: "http://engineering.linkedin.com/play/play-framework-async-io-without-thread-pool-and-callback-hell"
- name: "The Play Framework at LinkedIn"
  date: "June 26, 2013"
  description: |
    LinkedIn is moving its service infrastructure to the Play Framework. In
    this talk, I introduce Play, and show why it's the best web framework on the
    JVM.
  embed_url: "//www.youtube.com/embed/8z3h4Uv9YbE"
  links:
    - label: "Video"
      url: "https://www.youtube.com/watch?v=8z3h4Uv9YbE"
    - label: "Slides"
      url: "http://www.slideshare.net/brikis98/the-play-framework-at-linkedin"
    - label: "Blog Post"
      url: "http://engineering.linkedin.com/play/play-framework-linkedin"
- name: "Hackdays and Incubator"
  date: "February 12, 2013"
  description: |
    This is the story of the Hackday and[in]cubator programs at LinkedIn; this
    is the story of scalable, best-of-breed methods for driving innovation;
    this is the story of transformation: of your career, company, and the world.
  embed_url: "//www.slideshare.net/slideshow/embed_code/16479575"
  links:
    - label: "Slides"
      url: "http://www.slideshare.net/brikis98/hackdays-and-incubator"
    - label: "Video"
      url: "http://2014.tcbaltics.com/2013/video/jim-brikman"
- name: "dust.js at LinkedIn"
  date: "February 10, 2013"
  description: |
    In 2011, LinkedIn adopted dust.js. This is the story of client side
    templating at massive scale.
  embed_url: "//www.slideshare.net/slideshow/embed_code/16457212"
  links:
    - label: "Slides"
      url: "http://www.slideshare.net/brikis98/dustjs"
- name: "Rapid Prototyping"
  date: "September 30, 2012"
  description: |
    A presentation I did at LinkedIn hackdays on how, and why, to build things
    quickly.
  embed_url: "//www.slideshare.net/slideshow/embed_code/34062971"
  links:
    - label: "Slides"
      url: "http://www.slideshare.net/brikis98/rapid-prototyping-34062971"
